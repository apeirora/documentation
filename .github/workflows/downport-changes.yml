name: Downport from release to main
# originally taken from:
# https://github.tools.sap/kulturpass/kp-commerce/blob/0e9ebcde4c9a8b56b9f7a89f08a401080385367f/.github/workflows/sync-branches.yml

on:
  workflow_dispatch: # manual trigger
  push:
    branches:
      - release
jobs:
  downport-changes:
    runs-on: ${{ fromJSON(vars.RUNNER_JSON) }}
    steps:
      # as this workflow creates a pull request at the end, we'll first retrieve a token
      # for our service user so that we commit on its behalf
      # see https://github.com/actions/create-github-app-token/blob/93c1f04d6f14ea5b416e7a8dfd80446101c6adef/README.md?plain=1#L92-L120
      - name: Create GitHub app token
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ fromJSON(vars.SERVICE_USER_ORG_SCOPED_READ_ACCESS).app-id }}
          private-key: ${{ secrets[fromJSON(vars.SERVICE_USER_ORG_SCOPED_READ_ACCESS).private-key-secret-name] }}
      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_HOST: github.tools.sap
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          GH_ENTERPRISE_TOKEN: ${{ steps.app-token.outputs.token }}
      - name: Configure Git
        run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.tools.sap'

      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Fetch remote branches
        run: |
          git fetch origin --no-tags
          git branch --list '*/release*' --remote

      - name: Create branch mapping
        uses: actions/github-script@v7
        id: branch-mapping
        with:
          script: |
            const branchMapping = {
              'release': 'main'
            }
            console.log({ branchMapping })
            return branchMapping

      - name: Sync with next-in-line branch
        run: |
          git fetch origin
          if git show-ref --quiet origin/chore/downport-$GITHUB_REF_NAME
          then
            echo "Using existing branch"
            git checkout -f chore/downport-$GITHUB_REF_NAME
            git pull origin chore/downport-$GITHUB_REF_NAME || true

            echo "Ref of chore/downport-$GITHUB_REF_NAME:"
            git show-ref chore/downport-$GITHUB_REF_NAME
            echo "Ref of origin/$GITHUB_REF_NAME:"
            git show-ref origin/$GITHUB_REF_NAME

            git merge origin/$GITHUB_REF_NAME --no-ff --no-edit --no-verify --verbose
          else
            echo "Creating new branch"
            git branch -f chore/downport-$GITHUB_REF_NAME
            git checkout -f chore/downport-$GITHUB_REF_NAME
          fi
          git push origin chore/downport-$GITHUB_REF_NAME
          gh pr create --base $TARGET --head chore/downport-$GITHUB_REF_NAME --title "Chore: Latest $GITHUB_REF_NAME to $TARGET" --body "" || true
        env:
          TARGET: ${{ fromJSON(steps.branch-mapping.outputs.result)[github.ref_name] }}
          GH_HOST: github.tools.sap
          GH_ENTERPRISE_TOKEN: ${{ steps.app-token.outputs.token }}
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
